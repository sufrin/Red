#redpandoc  inputfile <texline#> editingfile
# 
# OS/X:
#   pandoc the  input file
#   if successful, open the pdf with Skim at the line 
#   corresponding to the numbered line <texline#>
#
echo redpandoc "$@"
inputfile=${1%%.md}.md
pdffile=${inputfile%%.md}.pdf
htmlfile=${inputfile%%.md}.html
texfile=${inputfile%%.md}.tex
line="${2-0}"
editing="${3-$inputfile}"
cwd=$(dirname $inputfile)
echo "++++++++++++ REDPPDF ++++++++++"
echo "EDITING:" $editing
echo "INPUT:  " $inputfile
echo "PDF:    " $pdffile 
echo "HTML:   " $htmlfile 
echo "CWD:    " $cwd
echo "+++++++++++++++++++++++++++++++"

if [ -e $cwd/PANDOC-HTML -o $cwd/PANDOC-PDF-VIA-HTML ]
then
    echo pandoc ... --output=$htmlfile
    (cd $cwd ; pandoc  -s --from markdown+tex_math_dollars+pandoc_title_block --output=$htmlfile $inputfile)
fi
if [ -e $cwd/PANDOC-PDF-VIA-HTML ]
then
    echo pandoc ... --input $htmlfile --output=$texfile
    (cd $cwd ; pandoc -s --output=$texfile $htmlfile)
    (cd $cwd ; xelatex $texfile; xelatex $texfile)
else
    echo pandoc  -s --pdf-engine=xelatex --from markdown+tex_math_dollars+pandoc_title_block --output=$pdffile $inputfile
    (cd $cwd ; pandoc  -s --pdf-engine=xelatex --from markdown+tex_math_dollars+pandoc_title_block --output=$pdffile $inputfile)
fi


if [ $(uname) = Linux ]
then
    # we should really do a search for text on opening
    evince $pdffile 
else
    echo open -a Skim $pdffile
    # skim invokes pdfsync %file %line at the right gesture (shift cmd point)
    open -a Skim $pdffile
fi